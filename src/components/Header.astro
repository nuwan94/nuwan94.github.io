---
import { SITE_TITLE } from '../consts';
import HeaderLink from './HeaderLink.astro';
---

<header class="m-0 p-0 bg-white shadow-md sticky top-0 z-50">
	<nav class="flex items-center justify-between min-h-16 px-4 max-w-7xl mx-auto">
		<div class="nav-brand">
			<h3 class="m-0 font-bold">
				<a href="/" class="no-underline transition-colors duration-200 text-brand-black hover:text-accent">
					{SITE_TITLE}
				</a>
			</h3>
		</div>
		
		<!-- Desktop menu -->
		<div class="nav-links hidden md:flex items-center gap-1">
			<HeaderLink href="/">Home</HeaderLink>
			<HeaderLink href="/articles">Articles</HeaderLink>
			<HeaderLink href="/projects">Projects</HeaderLink>
			<HeaderLink href="/about">About</HeaderLink>
		</div>
		
		<!-- Mobile menu button -->
		<button 
			class="mobile-menu-btn flex md:hidden flex-col justify-center items-center w-12 h-12 bg-transparent border-none cursor-pointer rounded-lg transition-all duration-200 relative hover:bg-accent/10"
			id="mobileMenuBtn" 
			aria-label="Open mobile menu"
		>
			<span class="w-6 h-0.5 rounded-sm transition-all duration-300 my-0.5 hamburger-line-1 bg-brand-black"></span>
			<span class="w-6 h-0.5 rounded-sm transition-all duration-300 my-0.5 hamburger-line-2 bg-brand-black"></span>
			<span class="w-6 h-0.5 rounded-sm transition-all duration-300 my-0.5 hamburger-line-3 bg-brand-black"></span>
		</button>
	</nav>
	
	<!-- Mobile menu overlay -->
	<div 
		class="mobile-menu-overlay fixed inset-0 bg-black/50 opacity-0 invisible transition-all duration-300 z-40"
		id="mobileMenuOverlay"
	></div>
	
	<!-- Mobile menu -->
	<div 
		class="mobile-menu fixed top-0 h-screen bg-white transition-all duration-300 ease-out z-50 flex flex-col -right-full w-70"
		id="mobileMenu"
	>
		<div class="mobile-menu-header flex items-center justify-between p-6 border-b min-h-16 border-brand-gray-light/30">
			<h3 class="m-0 text-lg font-semibold text-brand-black">Menu</h3>
			<button 
				class="close-btn w-10 h-10 bg-transparent border-none cursor-pointer rounded-md flex items-center justify-center transition-all duration-200 text-brand-black hover:bg-accent/10 hover:text-accent"
				id="closeMobileMenu" 
				aria-label="Close mobile menu"
			>
				<svg width="24" height="24" viewBox="0 0 24 24" fill="none">
					<path d="M18 6L6 18M6 6l12 12" stroke="currentColor" stroke-width="2" stroke-linecap="round"/>
				</svg>
			</button>
		</div>
		<div class="mobile-menu-content flex-1 py-4">
			<HeaderLink href="/">Home</HeaderLink>
			<HeaderLink href="/articles">Articles</HeaderLink>
			<HeaderLink href="/projects">Projects</HeaderLink>
			<HeaderLink href="/about">About</HeaderLink>
		</div>
	</div>
</header>

<script>
	// Mobile menu functionality
	const mobileMenuBtn = document.getElementById('mobileMenuBtn');
	const mobileMenu = document.getElementById('mobileMenu');
	const mobileMenuOverlay = document.getElementById('mobileMenuOverlay');
	const closeMobileMenu = document.getElementById('closeMobileMenu');
	
	function openMobileMenu() {
		if (mobileMenu && mobileMenuOverlay && mobileMenuBtn) {
			mobileMenu.classList.add('open');
			mobileMenuOverlay.classList.add('open');
			mobileMenuBtn.classList.add('open');
			document.body.style.overflow = 'hidden';
			mobileMenuBtn.setAttribute('aria-expanded', 'true');
		}
	}
	
	function closeMobileMenuFunc() {
		if (mobileMenu && mobileMenuOverlay && mobileMenuBtn) {
			mobileMenu.classList.remove('open');
			mobileMenuOverlay.classList.remove('open');
			mobileMenuBtn.classList.remove('open');
			document.body.style.overflow = '';
			mobileMenuBtn.setAttribute('aria-expanded', 'false');
		}
	}
	
	// Event listeners
	if (mobileMenuBtn) {
		mobileMenuBtn.addEventListener('click', openMobileMenu);
	}
	
	if (closeMobileMenu) {
		closeMobileMenu.addEventListener('click', closeMobileMenuFunc);
	}
	
	if (mobileMenuOverlay) {
		mobileMenuOverlay.addEventListener('click', closeMobileMenuFunc);
	}
	
	// Close menu when clicking on a link
	if (mobileMenu) {
		const menuLinks = mobileMenu.querySelectorAll('a');
		menuLinks.forEach(link => {
			link.addEventListener('click', closeMobileMenuFunc);
		});
	}
	
	// Keyboard support
	document.addEventListener('keydown', (event) => {
		if (event.key === 'Escape' && mobileMenu?.classList.contains('open')) {
			closeMobileMenuFunc();
			mobileMenuBtn?.focus();
		}
	});
</script>

<style>
	/* Header specific styles */
	.nav-brand h2 a:hover {
		color: #2337ff !important;
	}

	/* Mobile menu specific animations */
	.mobile-menu-btn.open .hamburger-line-1 {
		transform: rotate(45deg) translate(6px, 6px);
	}

	.mobile-menu-btn.open .hamburger-line-2 {
		opacity: 0;
	}

	.mobile-menu-btn.open .hamburger-line-3 {
		transform: rotate(-45deg) translate(6px, -6px);
	}

	.mobile-menu-overlay.open {
		opacity: 1;
		visibility: visible;
	}

	.mobile-menu.open {
		right: 0 !important;
	}

	/* Responsive overrides */
	@media (max-width: 480px) {
		.mobile-menu.open {
			width: 100vw !important;
		}
	}
</style>

