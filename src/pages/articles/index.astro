---
import { Image } from "astro:assets";
import { getCollection } from "astro:content";
import BaseHead from "../../components/BaseHead.astro";
import Footer from "../../components/Footer.astro";
import FormattedDate from "../../components/FormattedDate.astro";
import Header from "../../components/Header.astro";
import { SITE_DESCRIPTION, SITE_TITLE } from "../../consts";

const posts = (await getCollection("blog")).sort(
  (a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf()
);

const generateRandomGradient = () => {
  const colors = [
	"ff9a9e",
	"fad0c4",
	"fbc2eb",
	"a18cd1",
	"fbc7aa",
	"ffdde1",
	"96e6a1",
	"4bc0c8",
	"43cea2",
	"185a9d",
  ];
  const from =
	colors[Math.floor(Math.random() * colors.length)];
  let to = colors[Math.floor(Math.random() * colors.length)];
  while (to === from) {
	to = colors[Math.floor(Math.random() * colors.length)];
  }
  return { from, to };
};

// Use all posts without filtering
---

<!doctype html>
<html lang="en">
  <head>
    <BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} />
  </head>
  <body>
    <Header />
    <main class="w-full py-12">
      <!-- Hero Section -->
      <section class="text-center mb-16 px-4">
        <h1 class="text-4xl md:text-5xl font-bold text-brand-black mb-6">
          Articles
        </h1>
        <p class="text-lg text-brand-gray max-w-2xl mx-auto leading-relaxed">
          Thoughts, insights, and tutorials on software development,
          architecture, and technology. Explore my latest writings and
          discoveries.
        </p>
        <div class="w-24 h-1 bg-accent mx-auto mt-8 rounded-full"></div>
      </section>

      <!-- Articles Grid -->
      <!-- Articles Grid -->
      <section class="px-4">
        <div class="grid grid-cols-1 gap-8">
          {
            posts.map((post) => (
              <article class="group bg-white rounded-2xl overflow-hidden shadow-lg hover:shadow-2xl transition-all duration-300 ease-out hover:-translate-y-2 border border-brand-gray-light/20">
                <a
                  href={`/articles/${post.id}/`}
                  class="block h-full no-underline"
                >
                  <div class="relative overflow-hidden">
                    <Image
                      width={720}
                      height={360}
                      src={
                        post.data.heroImage
                          ? post.data.heroImage.src
                          : `https://via.assets.so/img.jpg?w=720&h=360&gradientFrom=${generateRandomGradient().from}&gradientTo=${generateRandomGradient().to}&gradientAngle=135&&text= &f=png`
                      }
                      alt={post.data.title}
                      class="w-full h-48 object-cover transition-transform duration-300 group-hover:scale-105"
                    />
                    <div class="absolute inset-0 bg-linear-to-t from-black/20 to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-300" />
                  </div>
                  <div class="p-6">
                    <div class="mb-4">
                      <h3 class="text-xl font-bold text-brand-black group-hover:text-accent transition-colors duration-200 leading-tight mb-3">
                        {post.data.title}
                      </h3>
                      <p class="text-brand-gray text-sm leading-relaxed line-clamp-3">
                        {post.data.description}
                      </p>
                    </div>

                    {post.data.tags && post.data.tags.length > 0 && (
                      <div class="flex flex-wrap gap-2 mb-4">
                        {post.data.tags.slice(0, 3).map((tag) => (
                          <span class="inline-block px-3 py-1 text-xs font-medium bg-accent/10 text-accent rounded-full border border-accent/20">
                            {tag}
                          </span>
                        ))}
                        {post.data.tags.length > 3 && (
                          <span class="inline-block px-3 py-1 text-xs font-medium bg-brand-gray-light text-brand-gray rounded-full">
                            +{post.data.tags.length - 3}
                          </span>
                        )}
                      </div>
                    )}

                    <div class="flex items-center justify-between text-sm text-brand-gray">
                      <time
                        class="font-medium"
                        datetime={post.data.pubDate.toISOString()}
                      >
                        <FormattedDate date={post.data.pubDate} />
                      </time>
                      <span class="text-accent font-medium group-hover:translate-x-1 transition-transform duration-200">
                        Read more â†’
                      </span>
                    </div>
                  </div>
                </a>
              </article>
            ))
          }
        </div>
      </section>
    </main>
    <Footer />
  </body>
</html>
